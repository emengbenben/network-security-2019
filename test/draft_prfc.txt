


Network Working Group                                    G. Nuggent, Ed.
Request for Comments: 1                 JHU Network Security Spring 2019
Category: Standards Track                                     March 2019


                     GoNuts Client Server Framework


Status of this Memo

   This document specifies a Playgrounds standards track protocol for
   the Playground Experiment, and requests discussion and suggestions
   for improvements.  Distribution of this memo is unlimited.

Copyright Notice

   Copyright (C) Seth James Nielson (2019).  All Rights Reserved.


































Nuggent                      Standards Track                    [Page 1]

RFC 1                            PRFC's                       March 2019


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . 3
   2.  Functional Specifications . . . . . . . . . . . . . . . . . . . 3
     2.1.  New User Packet . . . . . . . . . . . . . . . . . . . . . . 3
     2.2.  Transaction . . . . . . . . . . . . . . . . . . . . . . . . 4
     2.3.  Registered User . . . . . . . . . . . . . . . . . . . . . . 4
     2.4.  Error Handling  . . . . . . . . . . . . . . . . . . . . . . 4
     2.5.  Data Packets  . . . . . . . . . . . . . . . . . . . . . . . 5
     2.6.  Machine State . . . . . . . . . . . . . . . . . . . . . . . 5
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . . . 5
   Intellectual Property and Copyright Statements  . . . . . . . . . . 6







































Nuggent                      Standards Track                    [Page 2]

RFC 1                            PRFC's                       March 2019


1.  Introduction

   The Golden Nugget Casino PRFC defines the client-server framework
   that will used by our company to receive the right data fields and
   also send the right fields to the users.  It defines how the
   registration, login and game playing packets will be sent to and fro.

   This document describes the packets and each of its fields along with
   their right data types.


2.  Functional Specifications

2.1.  New User Packet

   The new user packet definws the fields that are required for
   registering a user who is not previously registered.  Already
   registered users will not be able to register and password, username
   and emails checks will be done here.

   class NewUser(PacketType): DEFINITION_IDENTIFIER =
   "NuggetFramework.type" DEFINITION_VERSION = "1.0" Body = [ ("Email",
   STRING), ("Pwd", STRING), ("Conf_Pwd", STRING), ("Company_Name",
   STRING), ]

   NewUser:

   Email: This is the email address used for registering.  A check will
   be done as to whether it is a legitimate email address or not using
   the syntax- abc@jhu.edu where '@jhu.edu' is mandatory and a check on
   the JHu email ID will be done.

   Pwd: The password needs to have atleast 6 characters containing both
   characters and numbers (atleast 1 character and 1 number).  This will
   be stored as a hash value.

   Conf_Pwd: This is to confirm the password entered in the previous
   field.  Both of these must match to validate the password.  This will
   also be stored as a hadh value.

   Company_Name: The name of the company must be mentioned aso we can
   keep a track of which user is currently playing and which company is
   earning more money so we can accordingly adjust game levels for each
   company separately.







Nuggent                      Standards Track                    [Page 3]

RFC 1                            PRFC's                       March 2019


2.2.  Transaction

   This class is used to define information that may be required when
   completing a transcation between the client and server.  Any
   transaction related to the client, server and the bank will be
   included in this packet.

   class Transaction(PacketType): DEFINITION_IDENTIFIER =
   "NuggetFramework.type" DEFINITION_VERSION = "1.0" Body = [ ("Token",
   STRING), ("Bet", STRING), ("GameID", STRING) ]

   Token: This field specifies the token received from the transaction
   between the bank and the client Bet: This field specifies the bet
   placed by the client GameID: This field specifies the game that the
   client wish to play

2.3.  Registered User

   The Registered user packet definws the fields that are required for a
   registered user to login in.

   class RegisteredUser(PacketType): DEFINITION_IDENTIFIER =
   "NuggetFramework.type" DEFINITION_VERSION = "1.0" Body = [
   ("Email",STRING) ("Password",STRING) ]

   Registered User: Email: This is the email address used login in.  A
   check will be done as to whether it is stored in the database.  Pwd:
   The password needs to have atleast 6 characters containing both
   characters and numbers (atleast 1 character and 1 number).  It will
   be checked whether matches the Email.

2.4.  Error Handling

   This class is to define error handling packet which is sent to client
   from server.

   class ErrorHandling(PacketType): Body = [ ("Message",STRING)
   ("ErrorCode", INT) ]

   o  CODE - Can be set to 1,2,3,4,5,6

   o

      1.  Username already exists

      2.  Invalid email address





Nuggent                      Standards Track                    [Page 4]

RFC 1                            PRFC's                       March 2019


      3.  Passwords do not match

      4.  Password invalid

      5.  Invalid Amount

      6.  Insufficient Balance

2.5.  Data Packets

   class DataPackets(PacketType): DEFINITION_IDENTIFIER =
   "NuggetFramework.type" DEFINITION_VERSION = "1.0" Body = [ ]

2.6.  Machine State

   class MacineState(PacketType): DEFINITION_IDENTIFIER =
   "NuggetFramework.type" DEFINITION_VERSION = "1.0" Body = [ ]


Author's Address

   Golden Nugget (editor)
   JHU Network Security Spring 2019
   JHU Malone MSSI Lab
   Baltimore, MD  21218
   USA

   Phone: +1 123-456-7891
   Email: golden_nugget@jhu.edu






















Nuggent                      Standards Track                    [Page 5]

RFC 1                            PRFC's                       March 2019


Full Copyright Statement

   Copyright (C) Seth James Nielson (2019).  All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the PLAYGROUND experiment or
   other associated organizations, except by explicit permission.

   The limited permissions granted above are perpetual and will not be
   revoked by SETH JAMES NIELSON or his successors or assigns.

   This document and the information contained herein is provided on an
   "AS IS" basis and SETH JAMES NIELSON and associated academic
   institutions DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION
   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Intellectual Property

   The PLAYGROUND framework and student submissions for PLAYGROUND are
   intended to be free of any intellectual property conflicts.  All
   submitting parties, especially students, are not allowed to submit
   source code, specifications, or other components that are known to be
   protected by copyright, patents, or other IP mechanisms.  Students
   submitting creative content grant shared rights and ownership of
   their content to the PLAYGROUND project.  Specifically, any
   submission can be used in future educational settings including
   subsequent PLAYGROUND experiments.

   Any interested party is invited to bring to the experiment director's
   attention any copyrights, patents or patent applications, or other
   proprietary rights which may cover technology that may be currently
   in use without permission.

   It should be noted that these statements have not been reviewed by
   legal counsel.  Moreover, the academic institutions at which
   PLAYGROUND experiments take place may have additional or even
   conflicting copyright and intellectual property rules.  Accordingly,
   concerned parties may need to contact their own lawyer and/or
   resources at their institution to understand the rights and



Nuggent                      Standards Track                    [Page 6]

RFC 1                            PRFC's                       March 2019


   limitations associated with code donated to a PLAYGROUND experiment.


















































Nuggent                      Standards Track                    [Page 7]

